# docker-compose doesn't run all the services automatically right now
# TODO: docker-compose is to be fixed

services:
  zookeeper:
    image: zookeeper:3.6.3
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  # This is the address that Kafka will advertise to clients
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # This is the address that Kafka will bind to for listening
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  mysql:
    image: mysql:8.4
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
#    deploy:
#      resources:
#        limits:
#          cpus: "2"
#          memory: 4G
#        reservations:
#          cpus: "1"
#          memory: 2G

#  miner:
#    build:
#      context: ./miner
#    ports:
#      - "8082:8082"
#    depends_on:
#      - kafka

#  backend:
#    build:
#      context: ./backend
#    ports:
#      - "8080:8080"
#    depends_on:
#      - miner

#  processor:
#    build:
#      context: ./processor
#    depends_on:
#      - kafka
#      - mysql
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/weather_aggregator_db
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATASOURCE_USERNAME: root1
#      SPRING_DATASOURCE_PASSWORD: root1
#    ports:
#      - "8081:8081"

#  frontend:
#    build:
#      context: ./frontend
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend


volumes:
  mysql-data:
