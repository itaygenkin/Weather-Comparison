spring.application.name=processor
server.port=8081

#backend.base-url=http://localhost:8080/api

# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3306/weather_aggregator_db
spring.datasource.username=root1
spring.datasource.password=root1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate settings
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=processor-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.properties.spring.json.type.properties=dto:com.itay.weather.dto.WeatherDataDto
spring.kafka.consumer.properties.spring.json.trusted.packages=com.itay.weather.processor.dto